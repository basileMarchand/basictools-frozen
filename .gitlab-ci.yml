variables:
    MYPROJECT : 'BasicTools'
    PACKAGE_NAME : "BTEnv"
    CONDA_BUILD_PACKAGE_DEPS : "cxx-compiler mkl-include cython pytest pytest-cov boost-cpp"
    CONDA_DOC_PACKAGE_DEPS : "sphinx<6.0 breathe doxygen sphinx-rtd-theme"
    CONDA_RUN_PACKAGE_DEPS : "mkl numpy sympy scipy meshio vtk pyvista networkx>=3.0 eigency"
    SYSTEM_PACKAGE_DEPS : "libgl1-mesa-glx"

stages:
    - test
    - deploydoc


.job_rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - when: manual


# default linux environment parameters
.linux_env:
  image: "condaforge/mambaforge:latest"
  before_script:
    - conda config --add channels drti
    - apt update
    - apt install -y  $SYSTEM_PACKAGE_DEPS
  tags:
    - docker

.build_script:
  script:
    - mamba create -y -n $PACKAGE_NAME python=$PYTHON_VERSION
    - source activate $PACKAGE_NAME
    - mamba install -y $CONDA_BUILD_PACKAGE_DEPS $CONDA_DOC_PACKAGE_DEPS $CONDA_RUN_PACKAGE_DEPS $CONDA_DOCKER_PACKAGE_DEPS
    - python setup.py build_clib
    - python setup.py build_ext --inplace
    - export PYTHONPATH=$PWD/src/
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/src


.test_and_doc_py:
  extends:
    - ".linux_env"
    - ".build_script"
    - .job_rules
  stage: test
  script:
    - !reference [.build_script, script]
    - export ZSET_NO_FAIL="True"
    - export CATALYST_NO_FAIL="True"
    - export ABAQUS_NO_FAIL="True"
    - mkdir -p tesdata
    - pytest --junitxml=tesdata/BasicToolsPyTests${PYTHON_VERSION_SHORT}.xml --cov=BasicTools --cov-report=html:public/coverage  --cov-report=xml:public/cobertura-coverage.xml  --ignore=src/BasicTools/IO/ParaViewBridge --ignore=src/BasicTools/IO/Wormhole.py src
    - python setup.py build_sphinx
  artifacts:
    paths:
      - src/BasicTools/Containers/*$PYTHON_VERSION_SHORT*.so*
      - src/BasicTools/FE/*/*$PYTHON_VERSION_SHORT*.so*
      - src/BasicTools/Linalg/*$PYTHON_VERSION_SHORT*.so*
      - src/libCppBasicTools.so
      - docs/_build/html
    reports:
      junit: tesdata/BasicToolsPyTests$PYTHON_VERSION_SHORT.xml
      coverage_report:
        coverage_format: cobertura
        path: public/cobertura-coverage.xml
    expire_in: 1 day

test_and_doc_py38:
  extends:
    - .test_and_doc_py
  variables:
    PYTHON_VERSION: "3.8"
    PYTHON_VERSION_SHORT: "38"

test_and_doc_py39:
  extends:
    - .test_and_doc_py
  variables:
    PYTHON_VERSION: "3.9"
    PYTHON_VERSION_SHORT: "39"

pages:
  extends:
    - .job_rules
  stage: deploydoc
  needs: [test_and_doc_py38]
  script:
    - mv docs/_build/html public
  artifacts:
      name: "WebSite"
      paths:
          - public
